import { LitElement, html } from 'lit';

class FriendRequestsComponent extends LitElement {
  static properties = {
    requests: { type: Array },
    flashMessage: { type: Object } // ƒê·ªÉ hi·ªÉn th·ªã th√¥ng b√°o flash
  };

  constructor() {
    super();
    this.requests = [];
    this.flashMessage = { info: null, error: null };
  }

  connectedCallback() {
    super.connectedCallback();
    this.fetchFriendRequests();
  }

  async fetchFriendRequests() {
    try {
      console.log("üîç Fetching friend requests...");
      const response = await fetch('/api/friend_requests', { credentials: 'include' });
      console.log("üü¢ Response status:", response.status);

      if (!response.ok) {
        throw new Error(`Kh√¥ng th·ªÉ t·∫£i danh s√°ch l·ªùi m·ªùi k·∫øt b·∫°n. HTTP ${response.status}`);
      }

      const data = await response.json();
      console.log("üì• Nh·∫≠n d·ªØ li·ªáu t·ª´ API:", data);

      this.requests = data.requests || [];
      this.requestUpdate();
    } catch (error) {
      console.error("‚ùå L·ªói khi t·∫£i danh s√°ch l·ªùi m·ªùi k·∫øt b·∫°n:", error);
    }
  }

  async acceptFriendRequest(requestId) {
    try {
      const response = await fetch(`/api/friend_requests/${requestId}/accept`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        credentials: 'include'
      });

      if (!response.ok) {
        throw new Error(`Kh√¥ng th·ªÉ ch·∫•p nh·∫≠n l·ªùi m·ªùi. HTTP ${response.status}`);
      }

      const data = await response.json();
      this.flashMessage = { info: data.message || "ƒê√£ ch·∫•p nh·∫≠n l·ªùi m·ªùi k·∫øt b·∫°n", error: null };
      this.requests = this.requests.filter(request => request.id !== requestId);
      this.requestUpdate();
    } catch (error) {
      console.error("‚ùå L·ªói khi ch·∫•p nh·∫≠n l·ªùi m·ªùi:", error);
      this.flashMessage = { info: null, error: "C√≥ l·ªói x·∫£y ra khi ch·∫•p nh·∫≠n l·ªùi m·ªùi" };
      this.requestUpdate();
    }
  }

  async declineFriendRequest(requestId) {
    try {
      const response = await fetch(`/api/friend_requests/${requestId}/decline`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        credentials: 'include'
      });

      if (!response.ok) {
        throw new Error(`Kh√¥ng th·ªÉ t·ª´ ch·ªëi l·ªùi m·ªùi. HTTP ${response.status}`);
      }

      const data = await response.json();
      this.flashMessage = { info: data.message || "ƒê√£ t·ª´ ch·ªëi l·ªùi m·ªùi k·∫øt b·∫°n", error: null };
      this.requests = this.requests.filter(request => request.id !== requestId);
      this.requestUpdate();
    } catch (error) {
      console.error("‚ùå L·ªói khi t·ª´ ch·ªëi l·ªùi m·ªùi:", error);
      this.flashMessage = { info: null, error: "C√≥ l·ªói x·∫£y ra khi t·ª´ ch·ªëi l·ªùi m·ªùi" };
      this.requestUpdate();
    }
  }

  render() {
    return html`
      <h1>L·ªùi m·ªùi k·∫øt b·∫°n ƒëang ch·ªù:</h1>

      <!-- Hi·ªÉn th·ªã th√¥ng b√°o flash -->
${this.flashMessage.info ? html`
        <p style="color: green;">${this.flashMessage.info}</p>
      ` : ''}
      ${this.flashMessage.error ? html`
        <p style="color: red;">${this.flashMessage.error}</p>
      ` : ''}

      <!-- Danh s√°ch l·ªùi m·ªùi k·∫øt b·∫°n -->
      ${this.requests.length === 0 ? html`
        <p>Kh√¥ng c√≥ l·ªùi m·ªùi k·∫øt b·∫°n n√†o.</p>
      ` : html`
        <ul>
          ${this.requests.map(request => html`
            <li>
              <img src="${request.
        sender_avatar
      }" alt="avatar" class="message-avatar" />
              <p>Email: ${request.sender_email
      }</p>
              <button @click="${() => this.acceptFriendRequest(request.id)}">Ch·∫•p nh·∫≠n</button>
              <button @click="${() => this.declineFriendRequest(request.id)}">T·ª´ ch·ªëi</button>
            </li>
          `)}
        </ul>
      `}

      <!-- N√∫t quay l·∫°i Dashboard -->
      <a
  href="/dashboard"
  class="inline-block px-6 py-3 bg-blue-500 text-white font-bold rounded-lg shadow-md hover:bg-blue-700 transition duration-300"
>
  Quay l·∫°i Dashboard
</a>
    `;
  }
}

customElements.define('friend-requests-component', FriendRequestsComponent);